name: Release and publish
on:
  release:
    types: [released, prereleased]

jobs:
  build:
    name: Build the base artifact
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Install composer dependencies
        run: composer install --no-dev -o --ignore-platform-reqs

      - name: Install composer local modules
        run: composer dump-autoload -o --no-dev

      - name: Bump version
        run: MODULE_NAME=${{ github.event.repository.name }} make version
        env:
          VERSION: ${{ github.event.release.tag_name }}

      - name: Create & upload artifact
        uses: actions/upload-artifact@v1
        with:
          name: ${{ github.event.repository.name }}
          path: ./

  clean-artifacts:
    name: Clean previous artifacts
    runs-on: ubuntu-latest
    steps:
      - name: Get release info
        id: release_info
        uses: toolmantim/release-drafter@v5
        env:
          GITHUB_TOKEN: ${{ secrets.GA_ACCESS_TOKEN }}
        with:
          version: "${{ steps.tagger.outputs.tag }}"
          name: "${{ steps.tagger.outputs.tag }}"

      - name: Clean existing assets
        shell: bash
        run: |
          curl -fsSL https://github.com/github/hub/raw/master/script/get | bash -s 2.14.1
          assets=`bin/hub api -t repos/${{ github.repository }}/releases/${{ steps.release_info.outputs.id }}/assets | awk '/\].url/ { print $2 }'`
          for asset in $assets
          do
            bin/hub api -X DELETE $asset
          done
        env:
          GITHUB_TOKEN: ${{ secrets.GA_ACCESS_TOKEN }}

  upload_release_asset_production:
    name: Upload the production zip asset to the release
    runs-on: ubuntu-latest
    needs: [build, clean-artifacts]
    steps:
      - name: Download artifact
        uses: actions/download-artifact@v1
        with:
          name: ${{ github.event.repository.name }}

      - name: Bundle the production zip
        run: |
          cd ${{ github.event.repository.name }}
          echo "$CONFIG_FILE" >> .config.prod.yml
          MODULE_NAME=${{ github.event.repository.name }} make zip-me

      - name: Publish the production zip
        uses: actions/upload-release-asset@v1.0.1
        env:
          GITHUB_TOKEN: ${{ secrets.GA_ACCESS_TOKEN }}
        with:
          upload_url: ${{ github.event.release.upload_url }}
          asset_path: ./${{ github.event.repository.name }}/releases/${{ github.event.repository.name }}.zip
          asset_name: ${{ github.event.repository.name }}.zip
          asset_content_type: application/zip

  changelog:
    runs-on: ubuntu-latest
    needs: [build, clean-artifacts, upload_release_asset_production]
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          token: ${{ secrets.GA_ACCESS_TOKEN }}

      - name: Update CHANGELOG
        id: changelog
        uses: requarks/changelog-action@v1
        with:
          token: ${{ secrets.GA_ACCESS_TOKEN }}
          tag: ${{ github.ref_name }}

      - name: Create Release
        uses: ncipollo/release-action@v1.12.0
        with:
          allowUpdates: true
          draft: false
          makeLatest: true
          name: ${{ github.ref_name }}
          body: ${{ steps.changelog.outputs.changes }}
          token: ${{ secrets.GA_ACCESS_TOKEN }}

      - name: Commit CHANGELOG.md
        uses: stefanzweifel/git-auto-commit-action@v4
        with:
          branch: master
          commit_message: 'docs: update CHANGELOG.md for ${{ github.ref_name }} [skip ci]'
          file_pattern: CHANGELOG.md